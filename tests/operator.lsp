(deftest "operator")

(assert-eq '(% 5 2) '1)
(assert-eq '(% 15 3) '0)
(assert-eq '(** 3 3) '27)
(assert-eq '(// 3 2) '1.5)
(assert-error '(// "3" 2) )
(assert-eq '(/ 3 2) '1)

(assert '(== (+ 0.1 0.2) 0.3))
(assert '(== (list 1 2 3) (sort (list 1 3 2))))
(assert '(== (al_make '(1 2 3 4)) (al_make '(3 4 1 2))))

(assert '(!= (+ 0.1 0.2) 0.1))

(setq {test_operater} 1)
(+= '{test_operater} 1)
(assert-eq '{test_operater} '2)
(-= '{test_operater} 1)
(assert-eq '{test_operater} '1)
(*= '{test_operater} 5)
(assert-eq '{test_operater} '5)
(//= '{test_operater} 2)
(assert-eq '{test_operater} '2.5)
(setq {test_operater} 3)
(%= '{test_operater} 2)
(assert-eq '{test_operater} '1)
(setq {test_operater} 2)
(**= '{test_operater} 2)
(assert-eq '{test_operater} '4)
(_/= '{test_operater} 3)
(assert-eq '{test_operater} '1)

(setq {test_operater} 60 {test_operater_b} 13)
(assert-eq '(& {test_operater} {test_operater_b}) '12)
(assert-eq '(| {test_operater} {test_operater_b}) '61)
(assert-eq '(^ {test_operater} {test_operater_b}) '49)
(assert-eq '(~ {test_operater}) '-61)
(assert-eq '(<< {test_operater} 2) '240)
(assert-eq '(>> {test_operater} 2) '15)

(assert-eq 'nil '(<<< nil nil))
(assert-eq 'nil '(>>> nil nil))

(setq {test_operater} nil)
